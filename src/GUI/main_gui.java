/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import utils.MergeSort;
import utils.BinarySearch;

/**
 *
 * @author utsav
 */
public class main_gui extends javax.swing.JFrame {

    
    /**
     * Creates new form main_gui
     */
    public main_gui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        parkingBtnGrp = new javax.swing.ButtonGroup();
        threeDBtnGrp = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        indexPanel = new javax.swing.JPanel();
        mainHeading = new javax.swing.JLabel();
        viewModeButton = new javax.swing.JButton();
        editModeButton = new javax.swing.JButton();
        viewPanel = new javax.swing.JPanel();
        mainHeading1 = new javax.swing.JLabel();
        threeDChkBox = new javax.swing.JCheckBox();
        parkingChkBox = new javax.swing.JCheckBox();
        filterBtn = new javax.swing.JButton();
        searchFld = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        updateBtn = new javax.swing.JButton();
        sortComboBox = new javax.swing.JComboBox<>();
        sortLbl = new javax.swing.JLabel();
        deleteBtn = new javax.swing.JButton();
        switchToAddBtn = new javax.swing.JButton();
        currencyLbl = new javax.swing.JLabel();
        currencyComboBox = new javax.swing.JComboBox<>();
        addPanel = new javax.swing.JPanel();
        mainHeading2 = new javax.swing.JLabel();
        idLbl = new javax.swing.JLabel();
        idFld = new javax.swing.JTextField();
        nameLbl = new javax.swing.JLabel();
        nameFld = new javax.swing.JTextField();
        parkingLbl = new javax.swing.JLabel();
        parkingYesRBtn = new javax.swing.JRadioButton();
        parkingNoRBtn = new javax.swing.JRadioButton();
        addressLbl = new javax.swing.JLabel();
        addressFld = new javax.swing.JTextField();
        threedLbl = new javax.swing.JLabel();
        threeDYesRBtn = new javax.swing.JRadioButton();
        threeDNoRBtn = new javax.swing.JRadioButton();
        contactLbl = new javax.swing.JLabel();
        contactFld = new javax.swing.JTextField();
        ticketPriceLbl = new javax.swing.JLabel();
        ticketPriceFld = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        switchToViewBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        navigateMenu = new javax.swing.JMenu();
        homeMenuItem = new javax.swing.JMenuItem();
        viewModeMenuItem = new javax.swing.JMenuItem();
        editModeMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hamro Cinema");
        setName("mainFrame"); // NOI18N
        setResizable(false);

        mainPanelLayout = new java.awt.CardLayout();
        mainPanel.setBackground(new java.awt.Color(51, 51, 51));
        mainPanel.setLayout(new java.awt.CardLayout());
        //Overriding the default layout.
        mainPanel.setLayout(mainPanelLayout);

        indexPanel.setBackground(new java.awt.Color(51, 51, 51));
        indexPanel.setPreferredSize(new java.awt.Dimension(961, 577));

        mainHeading.setFont(new java.awt.Font("Segoe UI Black", 0, 64)); // NOI18N
        mainHeading.setForeground(new java.awt.Color(255, 255, 255));
        mainHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainHeading.setText("Hamro Cinema");

        viewModeButton.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        viewModeButton.setForeground(new java.awt.Color(51, 51, 51));
        viewModeButton.setText("View Mode");
        viewModeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewModeButtonActionPerformed(evt);
            }
        });

        editModeButton.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        editModeButton.setForeground(new java.awt.Color(51, 51, 51));
        editModeButton.setText("Edit Mode");
        editModeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editModeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout indexPanelLayout = new javax.swing.GroupLayout(indexPanel);
        indexPanel.setLayout(indexPanelLayout);
        indexPanelLayout.setHorizontalGroup(
            indexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexPanelLayout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(viewModeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editModeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, indexPanelLayout.createSequentialGroup()
                .addContainerGap(184, Short.MAX_VALUE)
                .addComponent(mainHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(175, 175, 175))
        );
        indexPanelLayout.setVerticalGroup(
            indexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexPanelLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(mainHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(indexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewModeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editModeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(115, Short.MAX_VALUE))
        );

        mainPanel.add(indexPanel, "indexcard");

        viewPanel.setBackground(new java.awt.Color(51, 51, 51));
        viewPanel.setForeground(new java.awt.Color(255, 255, 255));

        mainHeading1.setFont(new java.awt.Font("Segoe UI Black", 0, 36)); // NOI18N
        mainHeading1.setForeground(new java.awt.Color(255, 255, 255));
        mainHeading1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainHeading1.setText("Hamro Cinema");

        threeDChkBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        threeDChkBox.setForeground(new java.awt.Color(255, 255, 255));
        threeDChkBox.setText("3D");

        parkingChkBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        parkingChkBox.setForeground(new java.awt.Color(255, 255, 255));
        parkingChkBox.setText("Parking");

        filterBtn.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        filterBtn.setForeground(new java.awt.Color(51, 51, 51));
        filterBtn.setText("Filter");
        filterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterBtnActionPerformed(evt);
            }
        });

        searchFld.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        searchFld.setForeground(new java.awt.Color(204, 204, 204));
        searchFld.setText("Search Ticket Price");
        searchFld.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchFldMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                searchFldMouseReleased(evt);
            }
        });
        searchFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFldActionPerformed(evt);
            }
        });

        searchBtn.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        searchBtn.setForeground(new java.awt.Color(51, 51, 51));
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        table.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        table.setForeground(new java.awt.Color(51, 51, 51));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(100), "Qfx", "Sundhara", "9851452245", "Yes", "Yes",  new Integer(490)},
                { new Integer(101), "Bigmovies", "Kamalpokhari", "9869342159", "Yes", "No",  new Integer(380)},
                { new Integer(102), "Fcube", "Chabahil", "9800898742", "No", "Yes",  new Integer(500)}
            },
            new String [] {
                "Cinema ID", "Name", "Address", "Contact", "Parking", "3D Support", "Ticket Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setRowHeight(25);
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(4).setResizable(false);
            table.getColumnModel().getColumn(5).setResizable(false);
            table.getColumnModel().getColumn(6).setResizable(false);
        }

        updateBtn.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(51, 51, 51));
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        sortComboBox.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        sortComboBox.setForeground(new java.awt.Color(255, 255, 255));
        sortComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Your Value", "Ticket Price Ascending", "Ticket Price Descending" }));
        sortComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortComboBoxActionPerformed(evt);
            }
        });

        sortLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        sortLbl.setForeground(new java.awt.Color(255, 255, 255));
        sortLbl.setText("Sort by:");

        deleteBtn.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(51, 51, 51));
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        switchToAddBtn.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        switchToAddBtn.setForeground(new java.awt.Color(51, 51, 51));
        switchToAddBtn.setText("Enter data");
        switchToAddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                switchToAddBtnActionPerformed(evt);
            }
        });

        currencyLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        currencyLbl.setForeground(new java.awt.Color(255, 255, 255));
        currencyLbl.setText("Currency");

        currencyComboBox.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        currencyComboBox.setForeground(new java.awt.Color(255, 255, 255));
        currencyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nepali Rupees", "Indian Rupees", "Japanese Yen", "American Dollar", "Great British Pound" }));
        currencyComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currencyComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewPanelLayout = new javax.swing.GroupLayout(viewPanel);
        viewPanel.setLayout(viewPanelLayout);
        viewPanelLayout.setHorizontalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(sortLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sortComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(currencyLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(currencyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchFld, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchBtn)
                .addGap(26, 26, 26))
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(threeDChkBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(parkingChkBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(filterBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateBtn)
                .addGap(30, 30, 30)
                .addComponent(deleteBtn)
                .addGap(29, 29, 29)
                .addComponent(switchToAddBtn)
                .addGap(27, 27, 27))
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 931, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(viewPanelLayout.createSequentialGroup()
                        .addGap(313, 313, 313)
                        .addComponent(mainHeading1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        viewPanelLayout.setVerticalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(mainHeading1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn)
                    .addComponent(sortLbl)
                    .addComponent(sortComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currencyLbl)
                    .addComponent(currencyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(switchToAddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(threeDChkBox)
                        .addComponent(parkingChkBox)
                        .addComponent(filterBtn)))
                .addGap(0, 19, Short.MAX_VALUE))
        );

        mainPanel.add(viewPanel, "viewcard");

        addPanel.setBackground(new java.awt.Color(51, 51, 51));

        mainHeading2.setFont(new java.awt.Font("Segoe UI Black", 0, 36)); // NOI18N
        mainHeading2.setForeground(new java.awt.Color(255, 255, 255));
        mainHeading2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainHeading2.setText("Hamro Cinema");

        idLbl.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        idLbl.setForeground(new java.awt.Color(255, 255, 255));
        idLbl.setText("Cinema ID:");

        idFld.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        idFld.setForeground(new java.awt.Color(51, 51, 51));

        nameLbl.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        nameLbl.setForeground(new java.awt.Color(255, 255, 255));
        nameLbl.setText("Name:");

        nameFld.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        nameFld.setForeground(new java.awt.Color(51, 51, 51));

        parkingLbl.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        parkingLbl.setForeground(new java.awt.Color(255, 255, 255));
        parkingLbl.setText("Parking:");

        parkingBtnGrp.add(parkingYesRBtn);
        parkingYesRBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        parkingYesRBtn.setForeground(new java.awt.Color(255, 255, 255));
        parkingYesRBtn.setText("Yes");
        parkingYesRBtn.setActionCommand("Yes");

        parkingBtnGrp.add(parkingNoRBtn);
        parkingNoRBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        parkingNoRBtn.setForeground(new java.awt.Color(255, 255, 255));
        parkingNoRBtn.setSelected(true);
        parkingNoRBtn.setText("No");
        parkingNoRBtn.setActionCommand("No");

        addressLbl.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addressLbl.setForeground(new java.awt.Color(255, 255, 255));
        addressLbl.setText("Address:");

        addressFld.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addressFld.setForeground(new java.awt.Color(51, 51, 51));

        threedLbl.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        threedLbl.setForeground(new java.awt.Color(255, 255, 255));
        threedLbl.setText("3D Support:");

        threeDBtnGrp.add(threeDYesRBtn);
        threeDYesRBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        threeDYesRBtn.setForeground(new java.awt.Color(255, 255, 255));
        threeDYesRBtn.setText("Yes");
        threeDYesRBtn.setActionCommand("Yes");

        threeDBtnGrp.add(threeDNoRBtn);
        threeDNoRBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        threeDNoRBtn.setForeground(new java.awt.Color(255, 255, 255));
        threeDNoRBtn.setSelected(true);
        threeDNoRBtn.setText("No");
        threeDNoRBtn.setActionCommand("No");

        contactLbl.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        contactLbl.setForeground(new java.awt.Color(255, 255, 255));
        contactLbl.setText("Contact:");

        contactFld.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        contactFld.setForeground(new java.awt.Color(51, 51, 51));

        ticketPriceLbl.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ticketPriceLbl.setForeground(new java.awt.Color(255, 255, 255));
        ticketPriceLbl.setText("Ticket Price:");

        ticketPriceFld.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ticketPriceFld.setForeground(new java.awt.Color(51, 51, 51));

        addBtn.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        addBtn.setForeground(new java.awt.Color(51, 51, 51));
        addBtn.setText("Add Data");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        switchToViewBtn.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        switchToViewBtn.setForeground(new java.awt.Color(51, 51, 51));
        switchToViewBtn.setText("View table");
        switchToViewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                switchToViewBtnActionPerformed(evt);
            }
        });

        clearBtn.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(51, 51, 51));
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
        addPanel.setLayout(addPanelLayout);
        addPanelLayout.setHorizontalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(contactLbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addressLbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(addressFld, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                    .addComponent(idFld, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameFld, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(contactFld))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(parkingLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(threedLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ticketPriceLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(parkingYesRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(threeDYesRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(parkingNoRBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(threeDNoRBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(ticketPriceFld))
                .addGap(76, 76, 76))
            .addGroup(addPanelLayout.createSequentialGroup()
                .addGap(310, 310, 310)
                .addComponent(mainHeading2, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addBtn)
                .addGap(74, 74, 74)
                .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(switchToViewBtn)
                .addGap(185, 185, 185))
        );
        addPanelLayout.setVerticalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(mainHeading2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLbl)
                    .addComponent(idFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLbl)
                    .addComponent(nameFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(parkingLbl)
                    .addComponent(parkingYesRBtn)
                    .addComponent(parkingNoRBtn))
                .addGap(29, 29, 29)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressLbl)
                    .addComponent(addressFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(threedLbl)
                    .addComponent(threeDYesRBtn)
                    .addComponent(threeDNoRBtn))
                .addGap(39, 39, 39)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(contactLbl)
                    .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(contactFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ticketPriceLbl)
                        .addComponent(ticketPriceFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(75, 75, 75)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(switchToViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 32, Short.MAX_VALUE))
        );

        mainPanel.add(addPanel, "editcard");

        fileMenu.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("Open");
        fileMenu.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("Exit");
        fileMenu.add(jMenuItem2);

        menuBar.add(fileMenu);

        editMenu.setText("Edit");
        menuBar.add(editMenu);

        navigateMenu.setText("Navigate");

        homeMenuItem.setText("Home");
        homeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeMenuItemActionPerformed(evt);
            }
        });
        navigateMenu.add(homeMenuItem);

        viewModeMenuItem.setText("View Mode");
        viewModeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewModeMenuItemActionPerformed(evt);
            }
        });
        navigateMenu.add(viewModeMenuItem);

        editModeMenuItem.setText("Edit Mode");
        editModeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editModeMenuItemActionPerformed(evt);
            }
        });
        navigateMenu.add(editModeMenuItem);

        menuBar.add(navigateMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 951, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewModeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewModeButtonActionPerformed
        // TODO add your handling code here:
        mainPanelLayout.show(mainPanel, "viewcard");
    }//GEN-LAST:event_viewModeButtonActionPerformed

    private void editModeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editModeButtonActionPerformed
        // TODO add your handling code here:
        mainPanelLayout.show(mainPanel, "editcard");
    }//GEN-LAST:event_editModeButtonActionPerformed

    private void homeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeMenuItemActionPerformed
        // TODO add your handling code here:
        mainPanelLayout.show(mainPanel, "indexcard");
    }//GEN-LAST:event_homeMenuItemActionPerformed

    private void viewModeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewModeMenuItemActionPerformed
        // TODO add your handling code here:
        mainPanelLayout.show(mainPanel, "viewcard");
    }//GEN-LAST:event_viewModeMenuItemActionPerformed

    private void editModeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editModeMenuItemActionPerformed
        // TODO add your handling code here:
        mainPanelLayout.show(mainPanel, "editcard");
    }//GEN-LAST:event_editModeMenuItemActionPerformed

    private void filterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        int rowCount = table.getRowCount();
        ArrayList<Object[]> tableData = getTableData();
        MergeSort.sort(tableData);
        int[] ticketPriceArray = new int[rowCount];
        String searchedData = searchFld.getText();
        for (int i = 0; i < rowCount; i++) {
            ticketPriceArray[i] = (int) tableData.get(i)[6];
        }
        int index;
        try {
            index = BinarySearch.search(ticketPriceArray, 0, ticketPriceArray.length - 1, Integer.parseInt(searchedData));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Please enter numerical value for the ticket price", "Datatype ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        /**
         * try { int ticketPrice = Integer.parseInt(searchedData); index =
         * BinarySearch.search(ticketPriceArray, 0, ticketPriceArray.length - 1,
         * Integer.parseInt(searchedData)); } catch (NumberFormatException e) {
         * index = BinarySearch.search(nameArray, 0, nameArray.length - 1,
         * searchedData); }*
         */
        if (index >= 0) {
            String toDisplay = searchedData + " is the ticket price for " + tableData.get(index)[1];
            JOptionPane.showMessageDialog(rootPane, toDisplay, "Match FOUND", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(rootPane, "No records match the searched ticket price.", "Match NOT FOUND", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void sortComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortComboBoxActionPerformed
        int action = sortComboBox.getSelectedIndex();

        if (action == 0) {
            JOptionPane.showMessageDialog(rootPane, "Please choose ascending or descending sort");
        } else if (action == 1) {
            ArrayList<Object[]> tableData = getTableData();
            MergeSort.sort(tableData);
            putInTable(tableData);
            // less than 0 is ascending. mincode.compare(code)
        } else if (action == 2) {
            ArrayList<Object[]> tableData = getTableData();
            MergeSort.sort(tableData);
            MergeSort.reverse(tableData);
            putInTable(tableData);
        }
    }//GEN-LAST:event_sortComboBoxActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        int activeRow = table.getSelectedRow();
        if (activeRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row to update");
            return;
        }

        String updateField, check;
        while (true) {
            updateField = JOptionPane.showInputDialog("Please enter the field you want to update below");
            String fieldCheck = updateField.toLowerCase();
            if ("cinema id".equals(fieldCheck) || "name".equals(fieldCheck) || "address".equals(fieldCheck) || "contact".equals(fieldCheck) || "parking".equals(fieldCheck) || "3d support".equals(fieldCheck) || "ticket price".equals(fieldCheck)) {
                String updateValue = JOptionPane.showInputDialog("Enter new data for " + updateField.toUpperCase());

                if (updateValue == null && updateValue.length() == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Field cannot be empty!");
                    return;
                }

                DefaultTableModel rowUpdate = (DefaultTableModel) table.getModel();
                for (int i = 0; i < 7; i++) {
                    String header = table.getColumnName(i);

                    if (fieldCheck.equals(header.toLowerCase())) {
                        try {
                            if (i == 0) {
                                int cinemaID = Integer.parseInt(updateValue);
                                rowUpdate.setValueAt(cinemaID, activeRow, i);
                            } else if (i == 3) {
                                Long.parseLong(updateValue);
                                rowUpdate.setValueAt(updateValue, activeRow, i);
                            } else if (i == 6) {
                                int ticketPrice = Integer.parseInt(updateValue);
                                rowUpdate.setValueAt(ticketPrice, activeRow, i);
                            } else {
                                rowUpdate.setValueAt(updateValue, activeRow, i);
                            }
                        } catch (NumberFormatException e) {
                            JOptionPane.showMessageDialog(rootPane, "Cinema ID, Contact and Ticket Price take numerical values!", "Wrong Input!", JOptionPane.ERROR_MESSAGE);
                            return;
                        }

                        check = JOptionPane.showInputDialog("Do you want to update more fields? (Y/N)");
                        if ("n".equals(check.toLowerCase())) {
                            return;
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Please make sure to enter the correct spelling. You can refer to column headers");
            }
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void switchToAddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_switchToAddBtnActionPerformed
        mainPanelLayout.show(mainPanel, "editcard");
    }//GEN-LAST:event_switchToAddBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int activeRow = table.getSelectedRow();
        DefaultTableModel rowDeletion = (DefaultTableModel) table.getModel();
        rowDeletion.removeRow(activeRow);
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void switchToViewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_switchToViewBtnActionPerformed
        mainPanelLayout.show(mainPanel, "viewcard");
    }//GEN-LAST:event_switchToViewBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        int id, price;
        boolean emptyRow = false;
        String idFldText, nameFldText, addressFldText, contactFldText, parkingText, threeDText, ticketPriceFldText;

        idFldText = idFld.getText();
        nameFldText = nameFld.getText();
        addressFldText = addressFld.getText();
        contactFldText = contactFld.getText();
        parkingText = parkingBtnGrp.getSelection().getActionCommand();
        threeDText = threeDBtnGrp.getSelection().getActionCommand();
        ticketPriceFldText = ticketPriceFld.getText();

        if ((idFldText == null || idFldText.isEmpty()) && (nameFldText == null || nameFldText.isEmpty()) && (addressFldText == null || addressFldText.isEmpty()) && (contactFldText == null || contactFldText.isEmpty()) && (parkingText == null || parkingText.isEmpty()) && (threeDText == null || threeDText.isEmpty()) && (ticketPriceFldText == null || ticketPriceFldText.isEmpty())) {
            JOptionPane.showMessageDialog(rootPane, "Please enter string or numerical value accoring to the field.", "Null/Empty Value Found!", JOptionPane.ERROR_MESSAGE);
        }

        try {
            id = Integer.parseInt(idFld.getText());
            Long.parseLong(contactFldText);
            price = Integer.parseInt(ticketPriceFld.getText());

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Cinema ID, contact an ticket price take numerical value. Please enter accordingly", "Invalid Input Found!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Object[] data = {id, nameFld.getText(), addressFld.getText(), contactFld.getText(), parkingBtnGrp.getSelection().getActionCommand(), threeDBtnGrp.getSelection().getActionCommand(), price};
        DefaultTableModel newEntry = (DefaultTableModel) table.getModel();

        int rowCount = table.getRowCount();
        int colCount = table.getColumnCount();
        int nextRow = 0;
        String checkName;
        int checkID;

        if (rowCount == 0) {
            DefaultTableModel tableModel = (DefaultTableModel) table.getModel();
            tableModel.addRow(data);
        } else {
            do {
                checkID = (int) table.getValueAt(nextRow, 0);
                checkName = (String) table.getValueAt(nextRow, 1);
                if (checkName != null && checkName.length() != 0) {
                    if (data[0].equals(checkID) || data[1].equals(checkName)) {
                        JOptionPane.showMessageDialog(rootPane, "Cinema ID and name must be unique. Please enter a unique value!", "Duplicate Entry Found!", JOptionPane.ERROR_MESSAGE);
                        return;
                    } else {
                        nextRow++;
                    }
                } else {
                    emptyRow = true;
                }
            } while (nextRow < rowCount && !emptyRow);

            if (nextRow < rowCount) {
                for (int i = 0; i < data.length; i++) {
                    table.setValueAt(data[i], nextRow, i);
                }
            } else {
                DefaultTableModel tableModel = (DefaultTableModel) table.getModel();
                tableModel.addRow(data);
            }
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        idFld.setText("");
        nameFld.setText("");
        addressFld.setText("");
        contactFld.setText("");
        ticketPriceFld.setText("");
        parkingYesRBtn.setSelected(false);
        parkingNoRBtn.setSelected(false);
        threeDYesRBtn.setSelected(false);
        threeDNoRBtn.setSelected(false);
    }//GEN-LAST:event_clearBtnActionPerformed

    private void currencyComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currencyComboBoxActionPerformed
        
    }//GEN-LAST:event_currencyComboBoxActionPerformed

    private void searchFldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFldMouseClicked
        searchFld.setText("");
        searchFld.setForeground(Color.BLACK);
    }//GEN-LAST:event_searchFldMouseClicked

    private void searchFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFldActionPerformed
        
    }//GEN-LAST:event_searchFldActionPerformed

    private void searchFldMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFldMouseReleased
        
    }//GEN-LAST:event_searchFldMouseReleased

    private void putInTable(ArrayList<Object[]> arrayToInsert) {
        int rowCount = table.getRowCount();
        int columnCount = table.getColumnCount();
        Object[] array = new Object[7];
        for (int i = 0; i < rowCount; i++) {
            array = arrayToInsert.get(i);
            for (int j = 0; j < columnCount; j++) {
                table.setValueAt(array[j], i, j);
            }
        }
    }

    private ArrayList getTableData() {
        int rowCount = table.getRowCount();
        int columnCount = table.getColumnCount();
        ArrayList tableData = new ArrayList(rowCount);
        Object[] rowData = new Object[columnCount];
        String valueToCheck;
        for (int i = 0; i < rowCount; i++) {
            valueToCheck = (String) table.getValueAt(i, 1);
            for (int j = 0; j < columnCount; j++) {
                try {
                    if (!valueToCheck.equals("") || !valueToCheck.isEmpty()) {
                        rowData[j] = table.getValueAt(i, j);
                    }
                } catch (NullPointerException e) {
                    continue;
                }
            }
            tableData.add(rowData.clone());
        }
        return tableData;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main_gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JPanel addPanel;
    private javax.swing.JTextField addressFld;
    private javax.swing.JLabel addressLbl;
    private javax.swing.JButton clearBtn;
    private javax.swing.JTextField contactFld;
    private javax.swing.JLabel contactLbl;
    private javax.swing.JComboBox<String> currencyComboBox;
    private javax.swing.JLabel currencyLbl;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JMenu editMenu;
    private javax.swing.JButton editModeButton;
    private javax.swing.JMenuItem editModeMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JButton filterBtn;
    private javax.swing.JMenuItem homeMenuItem;
    private javax.swing.JTextField idFld;
    private javax.swing.JLabel idLbl;
    private javax.swing.JPanel indexPanel;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mainHeading;
    private javax.swing.JLabel mainHeading1;
    private javax.swing.JLabel mainHeading2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JTextField nameFld;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JMenu navigateMenu;
    private javax.swing.ButtonGroup parkingBtnGrp;
    private javax.swing.JCheckBox parkingChkBox;
    private javax.swing.JLabel parkingLbl;
    private javax.swing.JRadioButton parkingNoRBtn;
    private javax.swing.JRadioButton parkingYesRBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchFld;
    private javax.swing.JComboBox<String> sortComboBox;
    private javax.swing.JLabel sortLbl;
    private javax.swing.JButton switchToAddBtn;
    private javax.swing.JButton switchToViewBtn;
    private javax.swing.JTable table;
    private javax.swing.ButtonGroup threeDBtnGrp;
    private javax.swing.JCheckBox threeDChkBox;
    private javax.swing.JRadioButton threeDNoRBtn;
    private javax.swing.JRadioButton threeDYesRBtn;
    private javax.swing.JLabel threedLbl;
    private javax.swing.JTextField ticketPriceFld;
    private javax.swing.JLabel ticketPriceLbl;
    private javax.swing.JButton updateBtn;
    private javax.swing.JButton viewModeButton;
    private javax.swing.JMenuItem viewModeMenuItem;
    private javax.swing.JPanel viewPanel;
    // End of variables declaration//GEN-END:variables
    private java.awt.CardLayout mainPanelLayout;
}
